from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from app.documents import add_document
from app.ask import ask_question

app = FastAPI(
    title="Centria RAG API",
    description="Upload documents and ask questions about them.",
    version="1.0.0"
)

# Enable CORS (update origins as needed)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # For dev, change to specific domains in prod
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# -------------------------------
# Models
# -------------------------------

class DocIn(BaseModel):
    text: str

class QuestionIn(BaseModel):
    question: str

class AnswerOut(BaseModel):
    answer: str

class UploadStatus(BaseModel):
    status: str

# -------------------------------
# Routes
# -------------------------------

@app.post("/upload", response_model=UploadStatus)
def upload_doc(doc: DocIn):
    try:
        add_document(doc.text)
        return {"status": "Document uploaded successfully"}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

@app.post("/ask", response_model=AnswerOut)
def ask(question: QuestionIn):
    try:
        answer = ask_question(question.question)
        return {"answer": answer}
    except Exception as e:
        raise HTTPException(status_code=500, detail="Failed to answer question: " + str(e))
